# -*- coding: utf-8 -*-

"Generated by Ipythonify 11/21/2014"
"Extracted from newlyImportedProject"

import tellurium as te

AntimonyTranslation = '''
//Created by libAntimony v2.5
model The_Brusselator()

// Compartments and Species:
compartment compartment_;
species X in compartment_, Y in compartment_, $A in compartment_, $B in compartment_;
species $D in compartment_, $E in compartment_;

// Reactions:
R1: $A => X; compartment_*R1_k1*A;
R2: 2X + Y => 3X; compartment_*R2_k1*X^2*Y;
R3: X + $B => Y + $D; compartment_*R3_k1*X*B;
R4: X => $E; compartment_*R4_k1*X;

// Species initializations:
X = 2.99999578721311;
Y = 2.99999578721311;
A = 0.499999851381779;
B = 2.99999578721311;
D = 0;
E = 0;

// Compartment initializations:
compartment_ = 1;

// Variable initializations:
R1_k1 = 1;
R1_k1 has unit_0;
R2_k1 = 1;
R2_k1 has unit_1;
R3_k1 = 1;
R3_k1 has unit_2;
R4_k1 = 1;
R4_k1 has unit_0;

//Other declarations:
const compartment_;

// Unit definitions:
unit volume = 1e-3 litre;
unit substance = 1e-3 mole;
unit unit_0 = 1 / second;
unit unit_1 = (0.001 litre)^2 / ((0.001 mole)^2 * second);
unit unit_2 = 0.001 litre / (0.001 mole * second);
end
'''
# Begin of generated script
import roadrunner
import roadrunner.testing

# Execute the tasks of model
rr0 = te.loada(AntimonyTranslation)
rr0.simulateOptions.structuredResult = False
rr0.selections = ["time","X","Y","E","D","B","A"]
task1 = rr0.simulate(0, 100, 200)

# The Data Generators
time = task1[0.0:,0]
X_1 = task1[0.0:,1]
Y_2 = task1[0.0:,2]
E_3 = task1[0.0:,3]
D_4 = task1[0.0:,4]
B_5 = task1[0.0:,5]
A_6 = task1[0.0:,6]

# The Plots
import numpy
import matplotlib.pyplot as plt
allX = numpy.array([time,time,time,time,time,time]).T
allY = numpy.array([X_1,Y_2,E_3,D_4,B_5,A_6]).T
plt.plot(allX, allY)
plt.show()
# End of generated script

